"""
TodoWhereInput is used for filtering Todo objects.
Input was generated by ent.
"""
input TodoWhereInput {
  not: TodoWhereInput
  and: [TodoWhereInput!]
  or: [TodoWhereInput!]
  
  """text field predicates"""
  text: String
  textNEQ: String
  textIn: [String!]
  textNotIn: [String!]
  textGT: String
  textGTE: String
  textLT: String
  textLTE: String
  textContains: String
  textHasPrefix: String
  textHasSuffix: String
  textEqualFold: String
  textContainsFold: String
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """status field predicates"""
  status: Status
  statusNEQ: Status
  statusIn: [Status!]
  statusNotIn: [Status!]
  
  """priority field predicates"""
  priority: Int
  priorityNEQ: Int
  priorityIn: [Int!]
  priorityNotIn: [Int!]
  priorityGT: Int
  priorityGTE: Int
  priorityLT: Int
  priorityLTE: Int
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """children edge predicates"""
  hasChildren: Boolean
  hasChildrenWith: [TodoWhereInput!]
  
  """parent edge predicates"""
  hasParent: Boolean
  hasParentWith: [TodoWhereInput!]
}

"""
ChartWhereInput is used for filtering Chart objects.
Input was generated by ent.
"""
input ChartWhereInput {
  not: ChartWhereInput
  and: [ChartWhereInput!]
  or: [ChartWhereInput!]
  
  """create_time field predicates"""
  createTime: Time
  createTimeNEQ: Time
  createTimeIn: [Time!]
  createTimeNotIn: [Time!]
  createTimeGT: Time
  createTimeGTE: Time
  createTimeLT: Time
  createTimeLTE: Time
  
  """update_time field predicates"""
  updateTime: Time
  updateTimeNEQ: Time
  updateTimeIn: [Time!]
  updateTimeNotIn: [Time!]
  updateTimeGT: Time
  updateTimeGTE: Time
  updateTimeLT: Time
  updateTimeLTE: Time
  
  """patch field predicates"""
  patch: Boolean
  patchNEQ: Boolean
  
  """generation field predicates"""
  generation: Int
  generationNEQ: Int
  generationIn: [Int!]
  generationNotIn: [Int!]
  generationGT: Int
  generationGTE: Int
  generationLT: Int
  generationLTE: Int
  
  """gender field predicates"""
  gender: Int
  genderNEQ: Int
  genderIn: [Int!]
  genderNotIn: [Int!]
  genderGT: Int
  genderGTE: Int
  genderLT: Int
  genderLTE: Int
  
  """allergy field predicates"""
  allergy: Int
  allergyNEQ: Int
  allergyIn: [Int!]
  allergyNotIn: [Int!]
  allergyGT: Int
  allergyGTE: Int
  allergyLT: Int
  allergyLTE: Int
  
  """rash field predicates"""
  rash: Int
  rashNEQ: Int
  rashIn: [Int!]
  rashNotIn: [Int!]
  rashGT: Int
  rashGTE: Int
  rashLT: Int
  rashLTE: Int
  
  """sting field predicates"""
  sting: Int
  stingNEQ: Int
  stingIn: [Int!]
  stingNotIn: [Int!]
  stingGT: Int
  stingGTE: Int
  stingLT: Int
  stingLTE: Int
  
  """dye_when field predicates"""
  dyeWhen: Int
  dyeWhenNEQ: Int
  dyeWhenIn: [Int!]
  dyeWhenNotIn: [Int!]
  dyeWhenGT: Int
  dyeWhenGTE: Int
  dyeWhenLT: Int
  dyeWhenLTE: Int
  
  """dye_where field predicates"""
  dyeWhere: Int
  dyeWhereNEQ: Int
  dyeWhereIn: [Int!]
  dyeWhereNotIn: [Int!]
  dyeWhereGT: Int
  dyeWhereGTE: Int
  dyeWhereLT: Int
  dyeWhereLTE: Int
  
  """hena_when field predicates"""
  henaWhen: Int
  henaWhenNEQ: Int
  henaWhenIn: [Int!]
  henaWhenNotIn: [Int!]
  henaWhenGT: Int
  henaWhenGTE: Int
  henaWhenLT: Int
  henaWhenLTE: Int
  
  """rebonded_when field predicates"""
  rebondedWhen: Int
  rebondedWhenNEQ: Int
  rebondedWhenIn: [Int!]
  rebondedWhenNotIn: [Int!]
  rebondedWhenGT: Int
  rebondedWhenGTE: Int
  rebondedWhenLT: Int
  rebondedWhenLTE: Int
  
  """manicure_when field predicates"""
  manicureWhen: Int
  manicureWhenNEQ: Int
  manicureWhenIn: [Int!]
  manicureWhenNotIn: [Int!]
  manicureWhenGT: Int
  manicureWhenGTE: Int
  manicureWhenLT: Int
  manicureWhenLTE: Int
  
  """perm_when field predicates"""
  permWhen: Int
  permWhenNEQ: Int
  permWhenIn: [Int!]
  permWhenNotIn: [Int!]
  permWhenGT: Int
  permWhenGTE: Int
  permWhenLT: Int
  permWhenLTE: Int
  
  """treatment_when field predicates"""
  treatmentWhen: Int
  treatmentWhenNEQ: Int
  treatmentWhenIn: [Int!]
  treatmentWhenNotIn: [Int!]
  treatmentWhenGT: Int
  treatmentWhenGTE: Int
  treatmentWhenLT: Int
  treatmentWhenLTE: Int
  
  """notice_reason field predicates"""
  noticeReason: Int
  noticeReasonNEQ: Int
  noticeReasonIn: [Int!]
  noticeReasonNotIn: [Int!]
  noticeReasonGT: Int
  noticeReasonGTE: Int
  noticeReasonLT: Int
  noticeReasonLTE: Int
  
  """last_name field predicates"""
  lastName: String
  lastNameNEQ: String
  lastNameIn: [String!]
  lastNameNotIn: [String!]
  lastNameGT: String
  lastNameGTE: String
  lastNameLT: String
  lastNameLTE: String
  lastNameContains: String
  lastNameHasPrefix: String
  lastNameHasSuffix: String
  lastNameEqualFold: String
  lastNameContainsFold: String
  
  """first_name field predicates"""
  firstName: String
  firstNameNEQ: String
  firstNameIn: [String!]
  firstNameNotIn: [String!]
  firstNameGT: String
  firstNameGTE: String
  firstNameLT: String
  firstNameLTE: String
  firstNameContains: String
  firstNameHasPrefix: String
  firstNameHasSuffix: String
  firstNameEqualFold: String
  firstNameContainsFold: String
  
  """last_name_hiragana field predicates"""
  lastNameHiragana: String
  lastNameHiraganaNEQ: String
  lastNameHiraganaIn: [String!]
  lastNameHiraganaNotIn: [String!]
  lastNameHiraganaGT: String
  lastNameHiraganaGTE: String
  lastNameHiraganaLT: String
  lastNameHiraganaLTE: String
  lastNameHiraganaContains: String
  lastNameHiraganaHasPrefix: String
  lastNameHiraganaHasSuffix: String
  lastNameHiraganaEqualFold: String
  lastNameHiraganaContainsFold: String
  
  """first_name_hiragana field predicates"""
  firstNameHiragana: String
  firstNameHiraganaNEQ: String
  firstNameHiraganaIn: [String!]
  firstNameHiraganaNotIn: [String!]
  firstNameHiraganaGT: String
  firstNameHiraganaGTE: String
  firstNameHiraganaLT: String
  firstNameHiraganaLTE: String
  firstNameHiraganaContains: String
  firstNameHiraganaHasPrefix: String
  firstNameHiraganaHasSuffix: String
  firstNameHiraganaEqualFold: String
  firstNameHiraganaContainsFold: String
  
  """postal_code field predicates"""
  postalCode: String
  postalCodeNEQ: String
  postalCodeIn: [String!]
  postalCodeNotIn: [String!]
  postalCodeGT: String
  postalCodeGTE: String
  postalCodeLT: String
  postalCodeLTE: String
  postalCodeContains: String
  postalCodeHasPrefix: String
  postalCodeHasSuffix: String
  postalCodeEqualFold: String
  postalCodeContainsFold: String
  
  """prefecture_id field predicates"""
  prefectureID: Int
  prefectureIDNEQ: Int
  prefectureIDIn: [Int!]
  prefectureIDNotIn: [Int!]
  prefectureIDGT: Int
  prefectureIDGTE: Int
  prefectureIDLT: Int
  prefectureIDLTE: Int
  
  """address field predicates"""
  address: String
  addressNEQ: String
  addressIn: [String!]
  addressNotIn: [String!]
  addressGT: String
  addressGTE: String
  addressLT: String
  addressLTE: String
  addressContains: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressEqualFold: String
  addressContainsFold: String
  
  """tel field predicates"""
  tel: String
  telNEQ: String
  telIn: [String!]
  telNotIn: [String!]
  telGT: String
  telGTE: String
  telLT: String
  telLTE: String
  telContains: String
  telHasPrefix: String
  telHasSuffix: String
  telEqualFold: String
  telContainsFold: String
  
  """email field predicates"""
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
}

"""
StaffWhereInput is used for filtering Staff objects.
Input was generated by ent.
"""
input StaffWhereInput {
  not: StaffWhereInput
  and: [StaffWhereInput!]
  or: [StaffWhereInput!]
  
  """uid field predicates"""
  uid: String
  uidNEQ: String
  uidIn: [String!]
  uidNotIn: [String!]
  uidGT: String
  uidGTE: String
  uidLT: String
  uidLTE: String
  uidContains: String
  uidHasPrefix: String
  uidHasSuffix: String
  uidEqualFold: String
  uidContainsFold: String
  
  """email field predicates"""
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """role field predicates"""
  role: Role
  roleNEQ: Role
  roleIn: [Role!]
  roleNotIn: [Role!]
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
}
